<Window
    x:Class="NotePadApp.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:NotePadApp.Models.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:NotePadApp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:NotePadApp.Models"
    xmlns:properties="clr-namespace:NotePadApp.Properties"
    xmlns:t1="clr-namespace:NotePadApp.Assets"
    xmlns:viewmodels="clr-namespace:NotePadApp.ViewModels"
    xmlns:views="clr-namespace:NotePadApp.Views"
    Title="MainWindow"
    Width="800"
    Height="450"
    MinWidth="500"
    MinHeight="300"
    d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
    Background="Transparent"
    SourceInitialized="Window_SourceInitialized"
    WindowStyle="None"
    mc:Ignorable="d">

    <!--  Gets rid of the chrome top  -->
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="5"
            GlassFrameThickness="0.4"
            ResizeBorderThickness="3" />

    </WindowChrome.WindowChrome>

    <Window.InputBindings>
        <!--  File commands  -->
        <KeyBinding Command="{Binding Tabs.NewTab}" Gesture="Ctrl+N" />
        <KeyBinding Command="{Binding NewWindow}" Gesture="Ctrl+Shift+N" />
        <KeyBinding Command="{Binding Tabs.OpenTab}" Gesture="Ctrl+O" />
        <KeyBinding Command="{Binding Tabs.Save}" Gesture="Ctrl+S" />
        <KeyBinding Command="{Binding Tabs.SaveAs}" Gesture="Ctrl+Shift+S" />
        <KeyBinding Command="{Binding Tabs.SaveAll}" Gesture="Ctrl+Alt+S" />
        <KeyBinding Command="{Binding Tabs.PageSetup}" Gesture="Ctrl+P" />
        <KeyBinding Command="{Binding Tabs.SelectedTabItem.Close}" Gesture="Ctrl+W" />
        <KeyBinding Command="{Binding CloseAll}" Gesture="Ctrl+Shift+W" />

        <!--  Edit commands  -->
        <KeyBinding Command="{Binding Tabs.SelectedTabItem.Delete}" Gesture="Delete" />
        <KeyBinding
            Command="{Binding Tabs.ShowFindDialog}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Gesture="Ctrl+F" />
        <KeyBinding
            Command="{Binding DataContext.Font.ShowFontWindow, RelativeSource={RelativeSource AncestorType={x:Type views:MainWindow}}}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Gesture="Ctrl+Q" />
        <KeyBinding
            Command="{Binding GoTo}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Gesture="Ctrl+G" />
        <KeyBinding
            Command="{Binding Tabs.ShowReplaceDialog}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Gesture="Ctrl+H" />
        <KeyBinding
            Command="{Binding FindNext}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Gesture="F3" />
        <KeyBinding
            Command="{Binding FindPrevious}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Gesture="Shift+F3" />
        <KeyBinding Command="{Binding Tabs.Date}" Gesture="F5" />

        <!--  View commands  -->
        <KeyBinding Command="{Binding View.ZoomIn}" Gesture="Ctrl+OemPlus" />
        <KeyBinding Command="{Binding View.ZoomOut}" Gesture="Ctrl+OemMinus" />
        <KeyBinding Command="{Binding View.RestoreView}" Gesture="Ctrl+0" />

    </Window.InputBindings>

    <Grid>
        <!--  Base Grid  -->
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <!--  Header  -->
            <RowDefinition Height="33" />
            <!--  Body  -->
            <RowDefinition Height="*" />
            <!--  Footer  -->
            <RowDefinition x:Name="FooterRow" Height="30" />
        </Grid.RowDefinitions>

        <!--  Columns for header and content  -->
        <Grid.ColumnDefinitions>
            <!--  Headers and Content  -->
            <ColumnDefinition Width="*" />
            <!--  Only Content, limit Header overlap  -->
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <!--  Start of background colors  -->

        <!--  Tabs Background  -->
        <Rectangle
            Grid.Row="0"
            Fill="{DynamicResource Tab}"
            PreviewMouseLeftButtonDown="rctHeader_PreviewMouseLeftButtonDown"
            PreviewMouseLeftButtonUp="rctHeader_PreviewMouseLeftButtonUp"
            PreviewMouseMove="rctHeader_PreviewMouseMove" />
        <!--  Header  -->
        <Rectangle Grid.Row="1" Fill="{DynamicResource HeaderFooter}" />
        <!--  Header  -->
        <Rectangle Grid.Row="1" Fill="{DynamicResource HeaderFooter}" />
        <!--  Seperator Body-Header  -->
        <Rectangle
            Grid.Row="1"
            Height="0.6"
            VerticalAlignment="Bottom"
            Fill="{DynamicResource Tab}" />
        <!--  Body  -->
        <Rectangle Grid.Row="2" Fill="{DynamicResource Body}" />

        <!--  End of background colors  -->

        <!--  Icon  -->
        <StackPanel
            Width="50"
            Height="30"
            Margin="5,5,5,5"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Background="Transparent"
            Orientation="Horizontal">
            <Image
                Height="20"
                Margin="7,7,2,2"
                Source="/NotePadIcon.ico" />
        </StackPanel>

        <!--  Window control Buttons  -->
        <StackPanel
            Width="150"
            Height="30"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Horizontal">
            <Button
                x:Name="MinimizeBtn"
                Width="50"
                Margin="0"
                VerticalContentAlignment="Bottom"
                Click="MinimizeBtn_Click"
                Content="&#xE108;"
                FontFamily="Segoe UI Symbol"
                FontSize="10pt"
                Foreground="{DynamicResource BodyText}"
                Style="{DynamicResource WindowNavBtn}" />

            <Button
                x:Name="RestoreBtn"
                Width="50"
                Margin="0"
                Click="RestoreBtn_Click"
                Content="{Binding Source={x:Static properties:Settings.Default}, Path=RestorePath}"
                FontFamily="Segoe UI Symbol"
                FontSize="11pt"
                Foreground="{DynamicResource BodyText}"
                Style="{DynamicResource WindowNavBtn}" />
            <Button
                x:Name="CloseBtn"
                Width="50"
                Margin="0"
                Click="CloseBtn_Click"
                Content="&#x2715;"
                FontFamily="Segoe UI Symbol"
                FontSize="11pt"
                Foreground="{DynamicResource BodyText}"
                Style="{DynamicResource CloseWindowBtn}" />
        </StackPanel>


        <!--  Menu  -->

        <views:MenuView x:Name="menuView" Grid.Row="1" />

        <!--  Tabs and Content  -->
        <TabControl
            x:Name="TabCtrl"
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="10,10,0,0"
            HorizontalAlignment="Left"
            HorizontalContentAlignment="Left"
            ItemsSource="{Binding Tabs.List}"
            SelectedItem="{Binding Tabs.SelectedTabItem, Mode=TwoWay}">

            <!--  Content of tabs  -->
            <TabControl.Resources>
                <DataTemplate DataType="{x:Type viewmodels:Tab}">
                    <views:TabContentView x:Name="TabContent" />
                </DataTemplate>

            </TabControl.Resources>

            <!--  TabControl Template  -->

            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel
                            x:Name="Conatiner"
                            Margin="0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <!--  External Scrollbar for Behavior control  -->
                            <ScrollBar
                                x:Name="myScrollBar"
                                Grid.Column="0"
                                Height="0"
                                Maximum="{Binding ScrollableWidth, ElementName=sv}"
                                Minimum="0"
                                Orientation="Horizontal"
                                SmallChange="100"
                                Tag="{Binding ElementName=sv}"
                                ViewportSize="{Binding ViewportWidth, ElementName=sv}"
                                Visibility="Collapsed"
                                Value="{Binding HorizontalOffset, ElementName=sv, Mode=OneWay}">
                                <!--  Adding the Behavior  -->
                                <!--  Nugget:Windows.Interactions  -->
                                <i:Interaction.Behaviors>
                                    <b:ScrollViewerScrollBehavior />
                                </i:Interaction.Behaviors>

                            </ScrollBar>
                            <!--  ScrollViewer for storing Tabs and easy acces  -->
                            <ScrollViewer
                                x:Name="sv"
                                Grid.Column="0"
                                Margin="20,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalContentAlignment="Center"
                                CanContentScroll="True"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Auto">

                                <ScrollViewer.Template>

                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="auto" />
                                            </Grid.ColumnDefinitions>

                                            <!--  Setting only buttons to navigate  -->

                                            <RepeatButton
                                                x:Name="LeftScroll"
                                                Grid.Column="0"
                                                Margin="20,0,0,0"
                                                Command="{x:Static ScrollBar.LineLeftCommand}"
                                                CommandTarget="{Binding ElementName=myScrollBar}"
                                                Content="&#x2bc7;"
                                                Style="{StaticResource AppSymbol}"
                                                Template="{DynamicResource ButtonTemplate}"
                                                Visibility="Collapsed" />

                                            <!--  Content to scroll  -->
                                            <ScrollContentPresenter Grid.Column="1" />

                                            <RepeatButton
                                                x:Name="RightScroll"
                                                Grid.Column="2"
                                                Margin="10,0,0,0"
                                                Command="{x:Static ScrollBar.LineRightCommand}"
                                                CommandTarget="{Binding ElementName=myScrollBar}"
                                                Content="&#x2bc8;"
                                                Style="{StaticResource AppSymbol}"
                                                Template="{DynamicResource ButtonTemplate}" />



                                        </Grid>

                                    </ControlTemplate>



                                </ScrollViewer.Template>
                                <!--  Storing only Tabheads in the ScrollViewer  -->
                                <TabPanel
                                    x:Name="HeaderPanel"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Height="30"
                                    Margin="10,0,10,0"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1"
                                    IsItemsHost="true"
                                    KeyboardNavigation.TabIndex="1" />
                            </ScrollViewer>

                            <!--  Button for Adding new Tabs  -->

                            <Button
                                x:Name="AddNewTab"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Command="{Binding Tabs.NewTab}"
                                Content="&#x2795;"
                                DockPanel.Dock="Right"
                                FontSize="9pt"
                                Style="{StaticResource AppSymbol}"
                                Template="{DynamicResource ButtonTemplate}" />


                        </StackPanel>

                        <!--  Content of the TabPanel  -->
                        <ContentPresenter
                            x:Name="PART_SelectedContentHost"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                            Margin="-10,40,0,5"
                            HorizontalAlignment="Left"
                            ContentSource="SelectedContent"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                    </Grid>
                </ControlTemplate>
            </TabControl.Template>

            <!--  TabItem Template  -->
            <TabControl.ItemTemplate>
                <DataTemplate x:Name="Tab" DataType="{x:Type viewmodels:Tab}">

                    <Grid
                        Width="200"
                        Height="30"
                        Margin="0"
                        VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <!--  Limit Text size, no overlap on Close Button  -->
                            <ColumnDefinition Width="165" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!--  Text block for displaying header of Tabs  -->
                        <TextBlock
                            Grid.Column="0"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="9pt">
                            <TextBlock.Style>

                                <!--  Change Text properites if Text is selected  -->
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="False">
                                            <Setter Property="FontWeight" Value="Normal" />
                                            <!--  Set other font properties as needed  -->
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="True">
                                            <Setter Property="FontWeight" Value="Medium" />
                                            <!--  Set other font properties as needed  -->
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                            <!--  Binding the Tab name to the Tab header  -->
                            <Run Text="{Binding Name}" />


                        </TextBlock>


                    </Grid>
                </DataTemplate>
            </TabControl.ItemTemplate>


        </TabControl>

        <!--  Themes  -->
        <views:ThemeView Grid.Row="1" />

        <!--  Footer  -->
        <views:FooterView x:Name="Footer" Grid.Row="3">
            <views:FooterView.Style>
                <!--  Trigger for the visibility of the footer  -->
                <Style TargetType="views:FooterView">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding View.IsFooterVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding View.IsFooterVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:FooterView.Style>
        </views:FooterView>

    </Grid>

</Window>
